// Mocks generated by Mockito 5.0.17 from annotations
// in photoapi/test/photo_list_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:hive_flutter/hive_flutter.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:photoapi/repository/likes_repository.dart' as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeBox_0<E> extends _i1.Fake implements _i2.Box<E> {}

/// A class which mocks [LikesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLikesRepository extends _i1.Mock implements _i3.LikesRepository {
  MockLikesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Box<dynamic> get box => (super.noSuchMethod(Invocation.getter(#box),
      returnValue: _FakeBox_0<dynamic>()) as _i2.Box<dynamic>);
  @override
  _i4.Stream<bool> watchKeyIsLiked({int? key}) =>
      (super.noSuchMethod(Invocation.method(#watchKeyIsLiked, [], {#key: key}),
          returnValue: Stream<bool>.empty()) as _i4.Stream<bool>);
  @override
  bool isLiked({int? key}) =>
      (super.noSuchMethod(Invocation.method(#isLiked, [], {#key: key}),
          returnValue: false) as bool);
  @override
  void like({int? key}) =>
      super.noSuchMethod(Invocation.method(#like, [], {#key: key}),
          returnValueForMissingStub: null);
  @override
  void unlike({int? key}) =>
      super.noSuchMethod(Invocation.method(#unlike, [], {#key: key}),
          returnValueForMissingStub: null);
}
